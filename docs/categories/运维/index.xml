<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>运维 on Randy&#39;s Blog</title>
    <link>http://renqilei.me/categories/%E8%BF%90%E7%BB%B4/</link>
    <description>Recent content in 运维 on Randy&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Fri, 31 May 2019 00:34:57 +0800</lastBuildDate>
    
	<atom:link href="http://renqilei.me/categories/%E8%BF%90%E7%BB%B4/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>优雅地删除 Kubernetes 服务账号</title>
      <link>http://renqilei.me/posts/delete-kubernetes-service-account-elegantly/</link>
      <pubDate>Fri, 31 May 2019 00:34:57 +0800</pubDate>
      
      <guid>http://renqilei.me/posts/delete-kubernetes-service-account-elegantly/</guid>
      <description>在优雅地删除 Kubernetes 服务账号（Service Account）前，我们得先通过 kubectl 创建一个账号： kubectl create serviceaccount test-account -n default 这一条指令就能够完成服务账号的创建了，同样</description>
    </item>
    
    <item>
      <title>CDH本地镜像源的部署</title>
      <link>http://renqilei.me/posts/cdh-repo-local-source-deployment/</link>
      <pubDate>Sat, 20 Apr 2019 14:50:45 +0800</pubDate>
      
      <guid>http://renqilei.me/posts/cdh-repo-local-source-deployment/</guid>
      <description>CDH 是 Cloudera 提供的开源企业级大数据工具集，包括 Hadoop、Flume、HBase、Hive 等一系列资源。 本文基于 CentOS 7，完成了 CDH 本地 yum 镜像源的制作</description>
    </item>
    
    <item>
      <title>Linux 上分区大于 2T 的磁盘</title>
      <link>http://renqilei.me/posts/partition-disk-over-2t-on-linux/</link>
      <pubDate>Sat, 20 Apr 2019 14:50:45 +0800</pubDate>
      
      <guid>http://renqilei.me/posts/partition-disk-over-2t-on-linux/</guid>
      <description>在 Linux 上，大于 2T 的磁盘需要通过 parted 来进行磁盘分区操作。 以将 6T磁盘 /dev/sdb 初始化为例。 parted /dev/sdb 接下来将会在命令交互中执行命令： mklabel gpt Yes print 打印信息 mkpart primary 0 6001GB 根据</description>
    </item>
    
    <item>
      <title>CentOS 7 添加和删除 swap 分区</title>
      <link>http://renqilei.me/posts/add-and-delete-swap-on-centos-7/</link>
      <pubDate>Thu, 10 Jan 2019 19:17:55 +0800</pubDate>
      
      <guid>http://renqilei.me/posts/add-and-delete-swap-on-centos-7/</guid>
      <description>什么是 swap swap，中文名为交换空间。具体来说，Linux 将物理内存分为内存段，叫做页面。交换是指内存页面被复制到预先设定好的硬盘空间(叫做交</description>
    </item>
    
    <item>
      <title>CentOS 7 卸载文件系统</title>
      <link>http://renqilei.me/posts/unmount-filesystem-on-centos7/</link>
      <pubDate>Mon, 07 Jan 2019 23:36:34 +0800</pubDate>
      
      <guid>http://renqilei.me/posts/unmount-filesystem-on-centos7/</guid>
      <description>卸载文件系统（或设备）是基于已挂载的文件系统（或设备）进行操作的。CentOS 7 的文件系统挂载包括对磁盘的初始化和文件目录的挂载，具体可参考</description>
    </item>
    
    <item>
      <title>CentOS 7 挂载磁盘</title>
      <link>http://renqilei.me/posts/mount-disk-on-centos7/</link>
      <pubDate>Wed, 26 Dec 2018 18:59:53 +0800</pubDate>
      
      <guid>http://renqilei.me/posts/mount-disk-on-centos7/</guid>
      <description>下面的指令未特别指出，均需 root 权限 检查磁盘分区和挂载情况 fdisk -l 如果 Disk 下无 Device Boot 信息，则表示未进行磁盘分区。 df -h 如果 FileSystem 下无 /dev/[vdx] 的挂载信息，则表示未进行</description>
    </item>
    
    <item>
      <title>CentOS 7 安装 Docker</title>
      <link>http://renqilei.me/posts/deploy-docker-on-centos7/</link>
      <pubDate>Tue, 25 Dec 2018 17:35:50 +0800</pubDate>
      
      <guid>http://renqilei.me/posts/deploy-docker-on-centos7/</guid>
      <description>依赖 devicemapper CentOS 7 上需要安装 devicemapper 存储驱动来支持 Docker 的安装。具体 Docker 在各操作系统中使用的存储驱动参考：Compatibility Matrix。 lvm CentOS 7 上可以使</description>
    </item>
    
    <item>
      <title>CentOS 检查磁盘是否为 SSD</title>
      <link>http://renqilei.me/posts/centos-check-ssd/</link>
      <pubDate>Thu, 13 Dec 2018 15:14:02 +0800</pubDate>
      
      <guid>http://renqilei.me/posts/centos-check-ssd/</guid>
      <description>cat /sys/block/[sda]/queue/rotational 打印结果： 0，即为 SSD 硬盘 1，即为机械硬盘 其中，[sda] 可以替换为各磁盘设备编号，其可以通过 fdisk -l 指令查看。</description>
    </item>
    
    <item>
      <title>网络诊断工具 mtr</title>
      <link>http://renqilei.me/posts/use-mtr/</link>
      <pubDate>Mon, 03 Dec 2018 10:37:32 +0800</pubDate>
      
      <guid>http://renqilei.me/posts/use-mtr/</guid>
      <description>mtr 结合了 traceroute 和 ping 的功能，完成对网络的诊断。 不同于 traceroute 默认使用 UDP 数据包进行探测的是，mtr 默认使用 ICMP 报文进行探测，在某些路由器上 ICMP 的优先级低于其他</description>
    </item>
    
    <item>
      <title>HttpDNS 原理</title>
      <link>http://renqilei.me/posts/httpdns-overview/</link>
      <pubDate>Wed, 21 Nov 2018 19:29:48 +0800</pubDate>
      
      <guid>http://renqilei.me/posts/httpdns-overview/</guid>
      <description>DNS DNS（Domain Name System，域名系统），提供将网站域名转为 IP 地址的服务。 通常，需要通过 UDP 协议访问就近的 DNS 服务器，来查询域名的真实 I</description>
    </item>
    
    <item>
      <title>使用logrotate进行Nginx日志切割</title>
      <link>http://renqilei.me/posts/use-logrotate-on-nginx-logs/</link>
      <pubDate>Sun, 11 Nov 2018 12:11:44 +0800</pubDate>
      
      <guid>http://renqilei.me/posts/use-logrotate-on-nginx-logs/</guid>
      <description>使用 Nginx 过程中，我们一定会通过记录访问日志和错误日志来记录和分析用户行为和运行情况。但随着时间的推移，日志文件就会变得愈来愈大，乃至占满有限的</description>
    </item>
    
    <item>
      <title>CentOS 7 搭建 LNPP（Linux，Nginx，PHP，PostgreSQL）</title>
      <link>http://renqilei.me/posts/deploy-lnpp-on-centos-7/</link>
      <pubDate>Wed, 26 Jul 2017 14:25:31 +0800</pubDate>
      
      <guid>http://renqilei.me/posts/deploy-lnpp-on-centos-7/</guid>
      <description>安装 安装版本： CentOS 7.3 64位 Nginx 1.10.2 PHP 7.1.6 PostgreSQL 9.2.18 CentOS 7 上的 PHP 版本较低。所以首先，我们需要强化一下我们的 yum，添加 EPEL 源和 Webtatic 源。 rpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm rpm -Uvh https://mirror.webtatic.com/yum/el7/webtatic-release.rpm 接下来我们就可以</description>
    </item>
    
    <item>
      <title>CentOS 7 安装 PHP 7</title>
      <link>http://renqilei.me/posts/install-php-7-on-centos-7/</link>
      <pubDate>Tue, 25 Jul 2017 13:52:04 +0800</pubDate>
      
      <guid>http://renqilei.me/posts/install-php-7-on-centos-7/</guid>
      <description>CentOS 7 的官方 yum 源中提供的 PHP 版本为 5.4.16。这一版本已经无法满足 PHP 较新框架（如 Laravel 5）的使用需求。下面就提供一种“优雅”方法，实现在 CentOS 7 上安装</description>
    </item>
    
  </channel>
</rss>